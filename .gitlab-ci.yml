stages:
  - build
  - deploy

variables:
  GOOGLE_PROJECT_ID: your-gcp-project-id
  GOOGLE_REGION: us-central1
  SERVICE_NAME: isu-digital-repository

before_script:
  - echo $GCLOUD_SERVICE_KEY > gcloud-service-key.json
  - gcloud auth activate-service-account --key-file gcloud-service-key.json
  - gcloud config set project $GOOGLE_PROJECT_ID
  - gcloud auth configure-docker $GOOGLE_REGION-docker.pkg.dev

build:
  stage: build
  image: google/cloud-sdk:alpine
  script:
    # Navigate to the frontend directory
    - cd frontend
    # Build the Docker image
    - docker build -t $GOOGLE_REGION-docker.pkg.dev/$GOOGLE_PROJECT_ID/$SERVICE_NAME/frontend:$CI_COMMIT_SHORT_SHA .
    # Push the image to Google Artifact Registry
    - docker push $GOOGLE_REGION-docker.pkg.dev/$GOOGLE_PROJECT_ID/$SERVICE_NAME/frontend:$CI_COMMIT_SHORT_SHA
  only:
    - main
    
deploy:
  stage: deploy
  image: google/cloud-sdk:alpine
  script:
    # Deploy to Cloud Run
    - gcloud run deploy $SERVICE_NAME 
      --image=$GOOGLE_REGION-docker.pkg.dev/$GOOGLE_PROJECT_ID/$SERVICE_NAME/frontend:$CI_COMMIT_SHORT_SHA 
      --region=$GOOGLE_REGION 
      --platform=managed 
      --allow-unauthenticated
      --set-env-vars="MY_OPENAI_API_KEY=sm://projects/$GOOGLE_PROJECT_ID/secrets/openai-api-key/versions/latest,QDRANT_URL=sm://projects/$GOOGLE_PROJECT_ID/secrets/qdrant-url/versions/latest,QDRANT_API_KEY=sm://projects/$GOOGLE_PROJECT_ID/secrets/qdrant-api-key/versions/latest"
  only:
    - main