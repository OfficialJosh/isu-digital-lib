name: Deploy ISU Semantic Search

on:
  push:
    branches:
      - main
  workflow_dispatch:  # Allows manual triggering

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'
      packages: 'write'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '19'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        working-directory: ./frontend
        run: npm ci

      # Create .env file with secrets before building
      - name: Create environment file
        working-directory: ./frontend
        run: |
          touch .env
          echo MY_OPENAI_API_KEY=${{ secrets.MY_OPENAI_API_KEY }} >> .env
          echo QDRANT_URL=${{ secrets.QDRANT_URL }} >> .env
          echo QDRANT_API_KEY=${{ secrets.QDRANT_API_KEY }} >> .env
          cat .env

      - name: Build application
        working-directory: ./frontend
        run: npm run build
        env:
          MY_OPENAI_API_KEY: ${{ secrets.MY_OPENAI_API_KEY }}
          QDRANT_URL: ${{ secrets.QDRANT_URL }}
          QDRANT_API_KEY: ${{ secrets.QDRANT_API_KEY }}
          NEXT_PUBLIC_API_URL: http://localhost:3000

      # Set up Docker for Google Artifact Registry
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Authenticate to Google Cloud
      - id: auth
        name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'

      # Set up gcloud CLI
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      # Configure Docker to use gcloud credentials
      - name: Configure Docker for Google Artifact Registry
        run: |
          gcloud auth configure-docker ${{ secrets.GCP_REGION }}-docker.pkg.dev

      # Build and push to Google Artifact Registry
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          push: true
          tags: ${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/cloud-run-source-deploy/isu-semantic-search:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            MY_OPENAI_API_KEY=${{ secrets.MY_OPENAI_API_KEY }}
            QDRANT_URL=${{ secrets.QDRANT_URL }}
            QDRANT_API_KEY=${{ secrets.QDRANT_API_KEY }}

      # Deploy to Cloud Run
      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy isu-digital-lib \
            --image ${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/cloud-run-source-deploy/isu-semantic-search:${{ github.sha }} \
            --region ${{ secrets.GCP_REGION }} \
            --platform managed \
            --allow-unauthenticated \
            --set-env-vars "MY_OPENAI_API_KEY=${{ secrets.MY_OPENAI_API_KEY }},QDRANT_URL=${{ secrets.QDRANT_URL }},QDRANT_API_KEY=${{ secrets.QDRANT_API_KEY }}"