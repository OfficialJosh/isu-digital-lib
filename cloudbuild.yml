steps:
  # Build the container image with a specific tag
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'build'
      - '-t'
      - 'gcr.io/$PROJECT_ID/isu-digital-lib:latest'
      - '.'
    dir: 'frontend'  # Set the working directory to frontend
  
  # Push the container image to Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/isu-digital-lib:latest']
  
  # First, clear all existing environment variables
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      - 'isu-digital-lib'
      - '--image'
      - 'gcr.io/$PROJECT_ID/isu-digital-lib:latest'
      - '--region'
      - 'us-central1'
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated'
      - '--clear-env-vars'
  
  # Then, set the environment variables
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      - 'isu-digital-lib'
      - '--image'
      - 'gcr.io/$PROJECT_ID/isu-digital-lib:latest'
      - '--region'
      - 'us-central1'
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated'
      - '--set-env-vars'
      - 'MY_OPENAI_API_KEY=${_MY_OPENAI_API_KEY},QDRANT_URL=${_QDRANT_URL},QDRANT_API_KEY=${_QDRANT_API_KEY}'

timeout: '1800s'  # 30 minutes

substitutions:
  _MY_OPENAI_API_KEY: ${_MY_OPENAI_API_KEY}
  _QDRANT_URL: ${_QDRANT_URL}
  _QDRANT_API_KEY: ${_QDRANT_API_KEY}

images:
  - 'gcr.io/$PROJECT_ID/isu-digital-lib:latest'

options:
  logging: CLOUD_LOGGING_ONLY