steps:
  # Build the container image
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'gcr.io/$PROJECT_ID/isu-digital-lib:$COMMIT_SHA', '-f', 'frontend/Dockerfile', '.']
  
  # Run tests
  - name: 'gcr.io/cloud-builders/npm'
    dir: 'frontend'
    args: ['install']
  
  - name: 'gcr.io/cloud-builders/npm'
    dir: 'frontend'
    args: ['run', 'test', '--if-present']
  
  # Push the container image to Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/isu-digital-lib:$COMMIT_SHA']
  
  # Deploy to Cloud Run automatically
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      - 'isu-digital-lib'
      - '--image'
      - 'gcr.io/$PROJECT_ID/isu-digital-lib:$COMMIT_SHA'
      - '--region'
      - 'us-central1'
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated'
      - '--set-env-vars'
      - 'MY_OPENAI_API_KEY=$$MY_OPENAI_API_KEY,QDRANT_URL=$$QDRANT_URL,QDRANT_API_KEY=$$QDRANT_API_KEY'
    secretEnv: ['MY_OPENAI_API_KEY', 'QDRANT_URL', 'QDRANT_API_KEY']
  
  # Verify deployment was successful
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: bash
    args:
      - '-c'
      - |
        echo "Verifying deployment..."
        sleep 15  # Give the service some time to start up
        STATUS=$(curl -s -o /dev/null -w "%{http_code}" https://isu-digital-lib-$PROJECT_ID.a.run.app || echo "Failed")
        if [ "$STATUS" == "200" ] || [ "$STATUS" == "404" ]; then
          echo "Deployment successful! Service responded with HTTP status $STATUS"
        else
          echo "Deployment verification failed! Service responded with HTTP status $STATUS"
          exit 1
        fi
  
  # Tag the latest successful image
  - name: 'gcr.io/cloud-builders/docker'
    args: ['tag', 'gcr.io/$PROJECT_ID/isu-digital-lib:$COMMIT_SHA', 'gcr.io/$PROJECT_ID/isu-digital-lib:latest']
  
  # Push the latest tag
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/isu-digital-lib:latest']

timeout: '1800s'  # 30 minutes

availableSecrets:
  secretManager:
    - versionName: projects/$PROJECT_ID/secrets/MY_OPENAI_API_KEY/versions/latest
      env: 'MY_OPENAI_API_KEY'
    - versionName: projects/$PROJECT_ID/secrets/QDRANT_URL/versions/latest
      env: 'QDRANT_URL'
    - versionName: projects/$PROJECT_ID/secrets/QDRANT_API_KEY/versions/latest
      env: 'QDRANT_API_KEY'

images:
  - 'gcr.io/$PROJECT_ID/isu-digital-lib:$COMMIT_SHA'
  - 'gcr.io/$PROJECT_ID/isu-digital-lib:latest'

options:
  logging: CLOUD_LOGGING_ONLY